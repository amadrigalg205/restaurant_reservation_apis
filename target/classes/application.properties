spring.application.name=restaurant_reservation_api

#
# JDBC properties
#
# local
#spring.datasource.url=jdbc:postgresql://localhost:5432/restaurant_db
#spring.datasource.username=postgres
#spring.datasource.password=admin
#spring.datasource.driver-class-name=org.postgresql.Driver

# remote
spring.datasource.url=jdbc:postgresql://dpg-cu46ned6l47c73av3jug-a.oregon-postgres.render.com:5432/restaurant_db_jotj
spring.datasource.username=edteam
spring.datasource.password=2dDlsapNQEW1gMjj2wviAFicu8o5Xrx8
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate - local
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Otras configuraciones
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Configuracion del path base para los endpoints
server.servlet.context-path=/api/v1

# Clave secreta utilizada para firmar y verificar los tokens JWT. Debe mantenerse segura.
jwt.secret=chLhMF9w3mwDutysbQxsX8x4CGwZef4mayTGSmbAG2BUsXbYFKvXrVfnPCa62PJxp9TuHxx4PQAS2yGUTBAPy3Dy53j8Uj2wb2AQ3nK8VLg7tUx9HCzHATEp
# Tiempo de validez de los tokens JWT en segundos (30 dias).
jwt.validity-in-seconds=2592000

openapi.dev-url=http://localhost:8080/api/v1
openapi.prod-url=https://restaurant-reservation-api-kv05.onrender.com/api/v1

paypal.client-id=Aa-pFb8MG6ncr4zlP9fCLDGZ_R4W47PgdBzqPDxIzbh3iHVKT3oVMP5X7Foufsk1lPtAB3TU6Kclk8UM
paypal.client-secret=EIcdCHzk_-Qnrl2veErRA1W9fSi59zNuWMTgfc-FaPnXf-2WMBxSQZexq0bG7QT5AGfBgEu4Nvbvs5dx
paypal.api-base=https://api-m.sandbox.paypal.com